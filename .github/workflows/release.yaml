name: Release

on:
  push:
    tags:
      - "*"

env:
  binary: fpm

jobs:
  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
      - name: Prepare package
        run: |
          mkdir linux
          cp target/x86_64-unknown-linux-gnu/release/${{ env.binary }} linux/
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: linux/${{ env.binary }}
          asset_name: ${{ env.binary }}-linux-${{ steps.get_version.outputs.tag }}
          tag: ${{ github.ref }}
          overwrite: true

  # Build for Windows
  release-windows:
    runs-on: windows-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-pc-windows-msvc
          override: true

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare package
        run: |
          mkdir windows
          cp target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe windows/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: windows/${{ env.binary }}.exe
          asset_name: ${{ env.binary }}-windows-${{ steps.get_version.outputs.tag }}.exe
          tag: ${{ github.ref }}
          overwrite: true

  # Build for macOS
  release-macos:
    runs-on: macOS-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"

      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin

      - name: Prepare Package
        run: |
          mkdir -p ${{ env.binary }}.app/Contents/MacOS
          cp target/x86_64-apple-darwin/release/${{ env.binary }} ${{ env.binary }}.app/Contents/MacOS/
          hdiutil create -fs HFS+ -volname "${{ env.binary }}" -srcfolder ${{ env.binary }}.app ${{ env.binary }}.dmg

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.dmg
          asset_name: ${{ env.binary }}-macos-${{ steps.get_version.outputs.tag }}.dmg
          tag: ${{ github.ref }}
          overwrite: true
